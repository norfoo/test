import requests
import json
import os # Potřebujeme pro přístup k environment variables (Secrets)

# --- Konfigurace ---
# Načtení API klíče z Replit Secrets (bezpečný způsob)
API_KEY = os.environ.get('TWELVE_DATA_API_KEY')
BASE_URL = 'https://api.twelvedata.com'

# --- Funkce pro získání aktuální kotace ---
def get_current_quote(symbol):
    """Získá poslední kotaci pro daný symbol z Twelve Data."""

    # Zkontrolujeme, zda byl API klíč úspěšně načten z Replit Secrets
    if not API_KEY:
        print("Chyba: API klíč nebyl nalezen v Replit Secrets.")
        print("Prosím, přidejte Secret s názvem (Key) 'TWELVE_DATA_API_KEY' a vaším klíčem (Value).")
        return None

    endpoint = f"{BASE_URL}/quote"
    params = {
        'symbol': symbol,
        'apikey': API_KEY,
        'source': 'docs' # Dobrá praxe pro testování dle dokumentace Twelve Data
    }

    print(f"Odesílám požadavek na: {endpoint} s parametry: symbol={symbol}") # Ladící výpis

    try:
        response = requests.get(endpoint, params=params)
        print(f"Stavový kód odpovědi: {response.status_code}") # Ladící výpis
        response.raise_for_status() # Vyvolá výjimku pro chybové stavy (4xx nebo 5xx)

        data = response.json()

        # --- Ladění: Vypsání celé odpovědi ---
        # print("Celá přijatá data (JSON):")
        # print(json.dumps(data, indent=2))
        # ---

        # Zkontrolujeme, zda odpověď obsahuje očekávanou cenu
        if 'close' in data and data['close'] is not None:
            return data['close']
        elif 'price' in data and data['price'] is not None:
             return data['price']
        else:
            print(f"Chyba: V odpovědi pro {symbol} nebyla nalezena platná cena ('close' nebo 'price').")
            print("Přijatá data:", data)
            return None

    except requests.exceptions.RequestException as e:
        print(f"Chyba při volání API Twelve Data: {e}")
         # --- Ladění: Vypsání obsahu odpovědi při chybě ---
        if hasattr(e, 'response') and e.response is not None:
           try:
               print("Odpověď serveru při chybě:", e.response.json())
           except json.JSONDecodeError:
               print("Odpověď serveru při chybě (není JSON):", e.response.text)
        # ---
        return None
    except Exception as e:
        print(f"Nastala neočekávaná chyba: {e}")
        return None

# --- Příklad použití ---
if __name__ == "__main__":
    # Můžete změnit na jiný symbol, např. 'XAU/USD' pro zlato
    target_symbol = 'EUR/USD'
    print(f"\nPokouším se získat aktuální cenu pro {target_symbol}...")

    current_price = get_current_quote(target_symbol)

    if current_price is not None:
        # Pamatujte: Cena na free tieru je pravděpodobně zpožděná
        print(f"\n>>> Aktuální (potenciálně zpožděná) cena pro {target_symbol}: {current_price}")
    else:
        print(f"\n>>> Nepodařilo se získat cenu pro {target_symbol}.")